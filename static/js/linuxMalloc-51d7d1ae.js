import"./vue-baa4c554.js";import{b as n}from"./@vue-3d103999.js";const r={},i=`<p>https://blog.csdn.net/lu_embedded/article/details/51588902</p>
<p>\u6211\u4EEC\u90FD\u77E5\u9053\u5728\u7528\u6237\u7A7A\u95F4\u52A8\u6001\u7533\u8BF7\u5185\u5B58\u7528\u7684\u51FD\u6570\u662F <strong>malloc()</strong>\uFF0C\u8FD9\u4E2A\u51FD\u6570\u5728\u5404\u79CD\u64CD\u4F5C\u7CFB\u7EDF\u4E0A\u7684\u4F7F\u7528\u662F\u4E00\u81F4\u7684\uFF0C\u5BF9\u5E94\u7684\u7528\u6237\u7A7A\u95F4\u5185\u5B58\u91CA\u653E\u51FD\u6570\u662F <strong>free()</strong>\u3002\u6CE8\u610F\uFF1A\u52A8\u6001\u7533\u8BF7\u7684\u5185\u5B58\u4F7F\u7528\u5B8C\u540E\u5FC5\u987B\u8981\u91CA\u653E\uFF0C\u5426\u5219\u4F1A\u9020\u6210\u5185\u5B58\u6CC4\u6F0F\uFF0C\u5982\u679C\u5185\u5B58\u6CC4\u6F0F\u53D1\u751F\u5728\u5185\u6838\u7A7A\u95F4\uFF0C\u5219\u4F1A\u9020\u6210\u7CFB\u7EDF\u5D29\u6E83\u3002</p>
<p>\u90A3\u4E48\uFF0C\u5728\u5185\u6838\u7A7A\u95F4\u4E2D\u5982\u4F55\u7533\u8BF7\u5185\u5B58\u5462\uFF1F\u4E00\u822C\u6211\u4EEC\u4F1A\u7528\u5230 <strong>kmalloc()\u3001kzalloc()\u3001vmalloc()</strong> \u7B49\uFF0C\u4E0B\u9762\u6211\u4EEC\u4ECB\u7ECD\u4E00\u4E0B\u8FD9\u4E9B\u51FD\u6570\u7684\u4F7F\u7528\u4EE5\u53CA\u5B83\u4EEC\u4E4B\u95F4\u7684\u533A\u522B\u3002</p>
<h2>kmalloc</h2>
<p>\u51FD\u6570\u539F\u578B\uFF1A</p>
<pre><code class="language-c">void *kmalloc(size_t size, gfp_t flags)\uFF1B
</code></pre>
<p>kmalloc() \u7533\u8BF7\u7684\u5185\u5B58\u4F4D\u4E8E\u7269\u7406\u5185\u5B58\u6620\u5C04\u533A\u57DF\uFF0C\u800C\u4E14\u5728\u7269\u7406\u4E0A\u4E5F\u662F\u8FDE\u7EED\u7684\uFF0C\u5B83\u4EEC\u4E0E\u771F\u5B9E\u7684\u7269\u7406\u5730\u5740\u53EA\u6709\u4E00\u4E2A\u56FA\u5B9A\u7684\u504F\u79FB\uFF0C\u56E0\u4E3A\u5B58\u5728\u8F83\u7B80\u5355\u7684\u8F6C\u6362\u5173\u7CFB\uFF0C\u6240\u4EE5\u5BF9\u7533\u8BF7\u7684\u5185\u5B58\u5927\u5C0F\u6709\u9650\u5236\uFF0C\u4E0D\u80FD\u8D85\u8FC7128KB\u3002
\u3000\u3000
\u8F83\u5E38\u7528\u7684 flags\uFF08\u5206\u914D\u5185\u5B58\u7684\u65B9\u6CD5\uFF09\uFF1A</p>
<ul>
<li>GFP_ATOMIC \u2014\u2014 \u5206\u914D\u5185\u5B58\u7684\u8FC7\u7A0B\u662F\u4E00\u4E2A\u539F\u5B50\u8FC7\u7A0B\uFF0C\u5206\u914D\u5185\u5B58\u7684\u8FC7\u7A0B\u4E0D\u4F1A\u88AB\uFF08\u9AD8\u4F18\u5148\u7EA7\u8FDB\u7A0B\u6216\u4E2D\u65AD\uFF09\u6253\u65AD\uFF1B</li>
<li>GFP_KERNEL \u2014\u2014 \u6B63\u5E38\u5206\u914D\u5185\u5B58\uFF1B</li>
<li>GFP_DMA \u2014\u2014 \u7ED9 DMA \u63A7\u5236\u5668\u5206\u914D\u5185\u5B58\uFF0C\u9700\u8981\u4F7F\u7528\u8BE5\u6807\u5FD7\uFF08DMA\u8981\u6C42\u5206\u914D\u865A\u62DF\u5730\u5740\u548C\u7269\u7406\u5730\u5740\u8FDE\u7EED\uFF09\u3002</li>
</ul>
<p>flags \u7684\u53C2\u8003\u7528\u6CD5\uFF1A</p>
<ul>
<li>\u8FDB\u7A0B\u4E0A\u4E0B\u6587\uFF0C\u53EF\u4EE5\u7761\u7720\uFF1AGFP_KERNEL</li>
<li>\u8FDB\u7A0B\u4E0A\u4E0B\u6587\uFF0C\u4E0D\u53EF\u4EE5\u7761\u7720\uFF1AGFP_ATOMIC</li>
<li>\u4E2D\u65AD\u5904\u7406\u7A0B\u5E8F\uFF1AGFP_ATOMIC
\u8F6F\u4E2D\u65AD\uFF1AGFP_ATOMIC
Tasklet\uFF1AGFP_ATOMIC</li>
<li>\u7528\u4E8EDMA\u7684\u5185\u5B58\uFF0C\u53EF\u4EE5\u7761\u7720\uFF1AGFP_DMA | GFP_KERNEL
\u7528\u4E8EDMA\u7684\u5185\u5B58\uFF0C\u4E0D\u53EF\u4EE5\u7761\u7720\uFF1AGFP_DMA |GFP_ATOMIC</li>
</ul>
<p>\u5BF9\u5E94\u7684\u5185\u5B58\u91CA\u653E\u51FD\u6570\u4E3A\uFF1A</p>
<pre><code>void kfree(const void *objp);
</code></pre>
<h2>kzalloc</h2>
<p><strong>kzalloc()</strong> \u51FD\u6570\u4E0E <strong>kmalloc()</strong> \u975E\u5E38\u76F8\u4F3C\uFF0C\u53C2\u6570\u53CA\u8FD4\u56DE\u503C\u662F\u4E00\u6837\u7684\uFF0C\u53EF\u4EE5\u8BF4\u662F\u524D\u8005\u662F\u540E\u8005\u7684\u4E00\u4E2A\u53D8\u79CD\uFF0C\u56E0\u4E3A <strong>kzalloc()</strong> \u5B9E\u9645\u4E0A\u53EA\u662F\u989D\u5916\u9644\u52A0\u4E86 <em><strong>GFP_ZERO</strong></em> \u6807\u5FD7\u3002\u6240\u4EE5\u5B83\u9664\u4E86\u7533\u8BF7\u5185\u6838\u5185\u5B58\u5916\uFF0C\u8FD8\u4F1A\u5BF9\u7533\u8BF7\u5230\u7684\u5185\u5B58\u5185\u5BB9\u6E05\u96F6\u3002</p>
<pre><code>/**
 * kzalloc - allocate memory. The memory is set to zero.
 * @size: how many bytes of memory are required.
 * @flags: the type of memory to allocate (see kmalloc).
 */
static inline void *kzalloc(size_t size, gfp_t flags)
{
	return kmalloc(size, flags | __GFP_ZERO);
}
</code></pre>
<p><strong>kzalloc()</strong> \u5BF9\u5E94\u7684\u5185\u5B58\u91CA\u653E\u51FD\u6570\u4E5F\u662F <strong>kfree()</strong>\u3002</p>
<h2>vmalloc</h2>
<p>\u51FD\u6570\u539F\u578B\uFF1A</p>
<pre><code>void *vmalloc(unsigned long size);
</code></pre>
<p>vmalloc() \u51FD\u6570\u5219\u4F1A\u5728\u865A\u62DF\u5185\u5B58\u7A7A\u95F4\u7ED9\u51FA\u4E00\u5757\u8FDE\u7EED\u7684\u5185\u5B58\u533A\uFF0C\u4F46\u8FD9\u7247\u8FDE\u7EED\u7684\u865A\u62DF\u5185\u5B58\u5728\u7269\u7406\u5185\u5B58\u4E2D\u5E76\u4E0D\u4E00\u5B9A\u8FDE\u7EED\u3002\u7531\u4E8E vmalloc() \u6CA1\u6709\u4FDD\u8BC1\u7533\u8BF7\u5230\u7684\u662F\u8FDE\u7EED\u7684\u7269\u7406\u5185\u5B58\uFF0C\u56E0\u6B64\u5BF9\u7533\u8BF7\u7684\u5185\u5B58\u5927\u5C0F\u6CA1\u6709\u9650\u5236\uFF0C\u5982\u679C\u9700\u8981\u7533\u8BF7\u8F83\u5927\u7684\u5185\u5B58\u7A7A\u95F4\u5C31\u9700\u8981\u7528\u6B64\u51FD\u6570\u4E86\u3002</p>
<p>\u5BF9\u5E94\u7684\u5185\u5B58\u91CA\u653E\u51FD\u6570\u4E3A\uFF1A</p>
<pre><code>void vfree(const void *addr);
</code></pre>
<p>\u6CE8\u610F\uFF1A<strong>vmalloc()</strong> \u548C <strong>vfree()</strong> \u53EF\u4EE5\u7761\u7720\uFF0C\u56E0\u6B64\u4E0D\u80FD\u4ECE\u4E2D\u65AD\u4E0A\u4E0B\u6587\u8C03\u7528\u3002</p>
<h2>\u603B\u7ED3</h2>
<p><strong>kmalloc()\u3001kzalloc()\u3001vmalloc()</strong> \u7684\u5171\u540C\u7279\u70B9\u662F\uFF1A</p>
<ol>
<li>\u7528\u4E8E\u7533\u8BF7\u5185\u6838\u7A7A\u95F4\u7684\u5185\u5B58\uFF1B</li>
<li>\u5185\u5B58\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\u8FDB\u884C\u5206\u914D\uFF1B</li>
<li>\u6240\u5206\u914D\u7684\u5185\u5B58\u865A\u62DF\u5730\u5740\u4E0A\u8FDE\u7EED\uFF1B</li>
<li>kmalloc()\u3001kzalloc()\u3001vmalloc() \u7684\u533A\u522B\u662F\uFF1A
<ul>
<li>kzalloc \u662F\u5F3A\u5236\u6E05\u96F6\u7684 kmalloc \u64CD\u4F5C\uFF1B\uFF08\u4EE5\u4E0B\u63CF\u8FF0\u4E0D\u533A\u5206 kmalloc \u548C kzalloc\uFF09</li>
<li>kmalloc \u5206\u914D\u7684\u5185\u5B58\u5927\u5C0F\u6709\u9650\u5236\uFF08128KB\uFF09\uFF0C\u800C vmalloc \u6CA1\u6709\u9650\u5236\uFF1B</li>
<li>kmalloc \u53EF\u4EE5\u4FDD\u8BC1\u5206\u914D\u7684\u5185\u5B58\u7269\u7406\u5730\u5740\u662F\u8FDE\u7EED\u7684\uFF0C\u4F46\u662F vmalloc \u4E0D\u80FD\u4FDD\u8BC1\uFF1B</li>
<li>kmalloc \u5206\u914D\u5185\u5B58\u7684\u8FC7\u7A0B\u53EF\u4EE5\u662F\u539F\u5B50\u8FC7\u7A0B\uFF08\u4F7F\u7528 GFP_ATOMIC\uFF09\uFF0C\u800C vmalloc \u5206\u914D\u5185\u5B58\u65F6\u5219\u53EF\u80FD\u4EA7\u751F\u963B\u585E\uFF1B</li>
<li>kmalloc \u5206\u914D\u5185\u5B58\u7684\u5F00\u9500\u5C0F\uFF0C\u56E0\u6B64 kmalloc \u6BD4 vmalloc \u8981\u5FEB\uFF1B</li>
</ul>
</li>
</ol>
<p>\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u5185\u5B58\u53EA\u6709\u5728\u8981\u88AB <strong>DMA</strong> \u8BBF\u95EE\u7684\u65F6\u5019\u624D\u9700\u8981\u7269\u7406\u4E0A\u8FDE\u7EED\uFF0C\u4F46\u4E3A\u4E86\u6027\u80FD\u4E0A\u7684\u8003\u8651\uFF0C\u5185\u6838\u4E2D\u4E00\u822C\u4F7F\u7528 <strong>kmalloc()</strong>\uFF0C\u800C\u53EA\u6709\u5728\u9700\u8981\u83B7\u5F97\u5927\u5757\u5185\u5B58\u65F6\u624D\u4F7F\u7528  <strong>vmalloc()</strong> \u3002\u4F8B\u5982\uFF0C\u5F53\u6A21\u5757\u88AB\u52A8\u6001\u52A0\u8F7D\u5230\u5185\u6838\u5F53\u4E2D\u65F6\uFF0C\u5C31\u628A\u6A21\u5757\u88C5\u8F7D\u5230\u7531 <strong>vmalloc()</strong> \u5206\u914D\u7684\u5185\u5B58\u4E0A\u3002</p>
<p>\u539F\u6587\u94FE\u63A5\uFF1Ahttps://blog.csdn.net/lu_embedded/article/details/51588902</p>
`,e=n(`<p>https://blog.csdn.net/lu_embedded/article/details/51588902</p><p>\u6211\u4EEC\u90FD\u77E5\u9053\u5728\u7528\u6237\u7A7A\u95F4\u52A8\u6001\u7533\u8BF7\u5185\u5B58\u7528\u7684\u51FD\u6570\u662F <strong>malloc()</strong>\uFF0C\u8FD9\u4E2A\u51FD\u6570\u5728\u5404\u79CD\u64CD\u4F5C\u7CFB\u7EDF\u4E0A\u7684\u4F7F\u7528\u662F\u4E00\u81F4\u7684\uFF0C\u5BF9\u5E94\u7684\u7528\u6237\u7A7A\u95F4\u5185\u5B58\u91CA\u653E\u51FD\u6570\u662F <strong>free()</strong>\u3002\u6CE8\u610F\uFF1A\u52A8\u6001\u7533\u8BF7\u7684\u5185\u5B58\u4F7F\u7528\u5B8C\u540E\u5FC5\u987B\u8981\u91CA\u653E\uFF0C\u5426\u5219\u4F1A\u9020\u6210\u5185\u5B58\u6CC4\u6F0F\uFF0C\u5982\u679C\u5185\u5B58\u6CC4\u6F0F\u53D1\u751F\u5728\u5185\u6838\u7A7A\u95F4\uFF0C\u5219\u4F1A\u9020\u6210\u7CFB\u7EDF\u5D29\u6E83\u3002</p><p>\u90A3\u4E48\uFF0C\u5728\u5185\u6838\u7A7A\u95F4\u4E2D\u5982\u4F55\u7533\u8BF7\u5185\u5B58\u5462\uFF1F\u4E00\u822C\u6211\u4EEC\u4F1A\u7528\u5230 <strong>kmalloc()\u3001kzalloc()\u3001vmalloc()</strong> \u7B49\uFF0C\u4E0B\u9762\u6211\u4EEC\u4ECB\u7ECD\u4E00\u4E0B\u8FD9\u4E9B\u51FD\u6570\u7684\u4F7F\u7528\u4EE5\u53CA\u5B83\u4EEC\u4E4B\u95F4\u7684\u533A\u522B\u3002</p><h2>kmalloc</h2><p>\u51FD\u6570\u539F\u578B\uFF1A</p><pre><code class="language-c">void *kmalloc(size_t size, gfp_t flags)\uFF1B
</code></pre><p>kmalloc() \u7533\u8BF7\u7684\u5185\u5B58\u4F4D\u4E8E\u7269\u7406\u5185\u5B58\u6620\u5C04\u533A\u57DF\uFF0C\u800C\u4E14\u5728\u7269\u7406\u4E0A\u4E5F\u662F\u8FDE\u7EED\u7684\uFF0C\u5B83\u4EEC\u4E0E\u771F\u5B9E\u7684\u7269\u7406\u5730\u5740\u53EA\u6709\u4E00\u4E2A\u56FA\u5B9A\u7684\u504F\u79FB\uFF0C\u56E0\u4E3A\u5B58\u5728\u8F83\u7B80\u5355\u7684\u8F6C\u6362\u5173\u7CFB\uFF0C\u6240\u4EE5\u5BF9\u7533\u8BF7\u7684\u5185\u5B58\u5927\u5C0F\u6709\u9650\u5236\uFF0C\u4E0D\u80FD\u8D85\u8FC7128KB\u3002 \u3000\u3000 \u8F83\u5E38\u7528\u7684 flags\uFF08\u5206\u914D\u5185\u5B58\u7684\u65B9\u6CD5\uFF09\uFF1A</p><ul><li>GFP_ATOMIC \u2014\u2014 \u5206\u914D\u5185\u5B58\u7684\u8FC7\u7A0B\u662F\u4E00\u4E2A\u539F\u5B50\u8FC7\u7A0B\uFF0C\u5206\u914D\u5185\u5B58\u7684\u8FC7\u7A0B\u4E0D\u4F1A\u88AB\uFF08\u9AD8\u4F18\u5148\u7EA7\u8FDB\u7A0B\u6216\u4E2D\u65AD\uFF09\u6253\u65AD\uFF1B</li><li>GFP_KERNEL \u2014\u2014 \u6B63\u5E38\u5206\u914D\u5185\u5B58\uFF1B</li><li>GFP_DMA \u2014\u2014 \u7ED9 DMA \u63A7\u5236\u5668\u5206\u914D\u5185\u5B58\uFF0C\u9700\u8981\u4F7F\u7528\u8BE5\u6807\u5FD7\uFF08DMA\u8981\u6C42\u5206\u914D\u865A\u62DF\u5730\u5740\u548C\u7269\u7406\u5730\u5740\u8FDE\u7EED\uFF09\u3002</li></ul><p>flags \u7684\u53C2\u8003\u7528\u6CD5\uFF1A</p><ul><li>\u8FDB\u7A0B\u4E0A\u4E0B\u6587\uFF0C\u53EF\u4EE5\u7761\u7720\uFF1AGFP_KERNEL</li><li>\u8FDB\u7A0B\u4E0A\u4E0B\u6587\uFF0C\u4E0D\u53EF\u4EE5\u7761\u7720\uFF1AGFP_ATOMIC</li><li>\u4E2D\u65AD\u5904\u7406\u7A0B\u5E8F\uFF1AGFP_ATOMIC \u8F6F\u4E2D\u65AD\uFF1AGFP_ATOMIC Tasklet\uFF1AGFP_ATOMIC</li><li>\u7528\u4E8EDMA\u7684\u5185\u5B58\uFF0C\u53EF\u4EE5\u7761\u7720\uFF1AGFP_DMA | GFP_KERNEL \u7528\u4E8EDMA\u7684\u5185\u5B58\uFF0C\u4E0D\u53EF\u4EE5\u7761\u7720\uFF1AGFP_DMA |GFP_ATOMIC</li></ul><p>\u5BF9\u5E94\u7684\u5185\u5B58\u91CA\u653E\u51FD\u6570\u4E3A\uFF1A</p><pre><code>void kfree(const void *objp);
</code></pre><h2>kzalloc</h2><p><strong>kzalloc()</strong> \u51FD\u6570\u4E0E <strong>kmalloc()</strong> \u975E\u5E38\u76F8\u4F3C\uFF0C\u53C2\u6570\u53CA\u8FD4\u56DE\u503C\u662F\u4E00\u6837\u7684\uFF0C\u53EF\u4EE5\u8BF4\u662F\u524D\u8005\u662F\u540E\u8005\u7684\u4E00\u4E2A\u53D8\u79CD\uFF0C\u56E0\u4E3A <strong>kzalloc()</strong> \u5B9E\u9645\u4E0A\u53EA\u662F\u989D\u5916\u9644\u52A0\u4E86 <em><strong>GFP_ZERO</strong></em> \u6807\u5FD7\u3002\u6240\u4EE5\u5B83\u9664\u4E86\u7533\u8BF7\u5185\u6838\u5185\u5B58\u5916\uFF0C\u8FD8\u4F1A\u5BF9\u7533\u8BF7\u5230\u7684\u5185\u5B58\u5185\u5BB9\u6E05\u96F6\u3002</p><pre><code>/**
 * kzalloc - allocate memory. The memory is set to zero.
 * @size: how many bytes of memory are required.
 * @flags: the type of memory to allocate (see kmalloc).
 */
static inline void *kzalloc(size_t size, gfp_t flags)
{
	return kmalloc(size, flags | __GFP_ZERO);
}
</code></pre><p><strong>kzalloc()</strong> \u5BF9\u5E94\u7684\u5185\u5B58\u91CA\u653E\u51FD\u6570\u4E5F\u662F <strong>kfree()</strong>\u3002</p><h2>vmalloc</h2><p>\u51FD\u6570\u539F\u578B\uFF1A</p><pre><code>void *vmalloc(unsigned long size);
</code></pre><p>vmalloc() \u51FD\u6570\u5219\u4F1A\u5728\u865A\u62DF\u5185\u5B58\u7A7A\u95F4\u7ED9\u51FA\u4E00\u5757\u8FDE\u7EED\u7684\u5185\u5B58\u533A\uFF0C\u4F46\u8FD9\u7247\u8FDE\u7EED\u7684\u865A\u62DF\u5185\u5B58\u5728\u7269\u7406\u5185\u5B58\u4E2D\u5E76\u4E0D\u4E00\u5B9A\u8FDE\u7EED\u3002\u7531\u4E8E vmalloc() \u6CA1\u6709\u4FDD\u8BC1\u7533\u8BF7\u5230\u7684\u662F\u8FDE\u7EED\u7684\u7269\u7406\u5185\u5B58\uFF0C\u56E0\u6B64\u5BF9\u7533\u8BF7\u7684\u5185\u5B58\u5927\u5C0F\u6CA1\u6709\u9650\u5236\uFF0C\u5982\u679C\u9700\u8981\u7533\u8BF7\u8F83\u5927\u7684\u5185\u5B58\u7A7A\u95F4\u5C31\u9700\u8981\u7528\u6B64\u51FD\u6570\u4E86\u3002</p><p>\u5BF9\u5E94\u7684\u5185\u5B58\u91CA\u653E\u51FD\u6570\u4E3A\uFF1A</p><pre><code>void vfree(const void *addr);
</code></pre><p>\u6CE8\u610F\uFF1A<strong>vmalloc()</strong> \u548C <strong>vfree()</strong> \u53EF\u4EE5\u7761\u7720\uFF0C\u56E0\u6B64\u4E0D\u80FD\u4ECE\u4E2D\u65AD\u4E0A\u4E0B\u6587\u8C03\u7528\u3002</p><h2>\u603B\u7ED3</h2><p><strong>kmalloc()\u3001kzalloc()\u3001vmalloc()</strong> \u7684\u5171\u540C\u7279\u70B9\u662F\uFF1A</p><ol><li>\u7528\u4E8E\u7533\u8BF7\u5185\u6838\u7A7A\u95F4\u7684\u5185\u5B58\uFF1B</li><li>\u5185\u5B58\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\u8FDB\u884C\u5206\u914D\uFF1B</li><li>\u6240\u5206\u914D\u7684\u5185\u5B58\u865A\u62DF\u5730\u5740\u4E0A\u8FDE\u7EED\uFF1B</li><li>kmalloc()\u3001kzalloc()\u3001vmalloc() \u7684\u533A\u522B\u662F\uFF1A <ul><li>kzalloc \u662F\u5F3A\u5236\u6E05\u96F6\u7684 kmalloc \u64CD\u4F5C\uFF1B\uFF08\u4EE5\u4E0B\u63CF\u8FF0\u4E0D\u533A\u5206 kmalloc \u548C kzalloc\uFF09</li><li>kmalloc \u5206\u914D\u7684\u5185\u5B58\u5927\u5C0F\u6709\u9650\u5236\uFF08128KB\uFF09\uFF0C\u800C vmalloc \u6CA1\u6709\u9650\u5236\uFF1B</li><li>kmalloc \u53EF\u4EE5\u4FDD\u8BC1\u5206\u914D\u7684\u5185\u5B58\u7269\u7406\u5730\u5740\u662F\u8FDE\u7EED\u7684\uFF0C\u4F46\u662F vmalloc \u4E0D\u80FD\u4FDD\u8BC1\uFF1B</li><li>kmalloc \u5206\u914D\u5185\u5B58\u7684\u8FC7\u7A0B\u53EF\u4EE5\u662F\u539F\u5B50\u8FC7\u7A0B\uFF08\u4F7F\u7528 GFP_ATOMIC\uFF09\uFF0C\u800C vmalloc \u5206\u914D\u5185\u5B58\u65F6\u5219\u53EF\u80FD\u4EA7\u751F\u963B\u585E\uFF1B</li><li>kmalloc \u5206\u914D\u5185\u5B58\u7684\u5F00\u9500\u5C0F\uFF0C\u56E0\u6B64 kmalloc \u6BD4 vmalloc \u8981\u5FEB\uFF1B</li></ul></li></ol><p>\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u5185\u5B58\u53EA\u6709\u5728\u8981\u88AB <strong>DMA</strong> \u8BBF\u95EE\u7684\u65F6\u5019\u624D\u9700\u8981\u7269\u7406\u4E0A\u8FDE\u7EED\uFF0C\u4F46\u4E3A\u4E86\u6027\u80FD\u4E0A\u7684\u8003\u8651\uFF0C\u5185\u6838\u4E2D\u4E00\u822C\u4F7F\u7528 <strong>kmalloc()</strong>\uFF0C\u800C\u53EA\u6709\u5728\u9700\u8981\u83B7\u5F97\u5927\u5757\u5185\u5B58\u65F6\u624D\u4F7F\u7528 <strong>vmalloc()</strong> \u3002\u4F8B\u5982\uFF0C\u5F53\u6A21\u5757\u88AB\u52A8\u6001\u52A0\u8F7D\u5230\u5185\u6838\u5F53\u4E2D\u65F6\uFF0C\u5C31\u628A\u6A21\u5757\u88C5\u8F7D\u5230\u7531 <strong>vmalloc()</strong> \u5206\u914D\u7684\u5185\u5B58\u4E0A\u3002</p><p>\u539F\u6587\u94FE\u63A5\uFF1Ahttps://blog.csdn.net/lu_embedded/article/details/51588902</p>`,28);function o(l,c){return e}const t={render:o};t.__hmrId="/Users/deng/Documents/GitHub/dengmengqiu.github.io/posts/post/os/linuxMalloc.md";const p=l=>({components:l,render:o});export{t as VueComponent,p as VueComponentWith,r as attributes,i as html};
